#!/usr/bin/python

import sys
import subprocess
from urlparse import urlparse

def run_ab(url, extra_params):
    cmd = 'ab %s %s' % (extra_params, url)
    print cmd
    ab_res = subprocess.Popen(cmd.split(), stdout=subprocess.PIPE).communicate()[0]

    res = []
    for line in ab_res.split('\n'):
        if 'Requests per second:' in line:
            res.append(float(line.split(':')[1].split()[0]))
            break
    return res

def versus(url1, url2,  extra_params):
    res1 = run_ab(url1, extra_params)
    res2 = run_ab(url2, extra_params)
    return [(res1[i], res2[i], (res1[i] / res2[i])) for i in range(len(res1))]

COLOR = {
    'green': '\033[1;32m%s\033[0m',
    'red': '\033[1;31m%s\033[0m',
    'magenta': '\033[1;35m%s\033[0m',
}

def color(text, color):
    try:
        return COLOR[color] % text
    except KeyError, e:
        return text

def usage():
    print 'USAGE: abvs [-n number_of_requests] [-c number_concurrent_requests] url1 url2.'
    print'You can also use any ab (apache bench) option.'
    print'Example : abvs -n 100 -c 10 http://www.google.com/ http://www.google.fr/'
    sys.exit(1)

try:
    url1, url2 = sys.argv[-2], sys.argv[-1]
    p1 = urlparse(url1)
    p2 = urlparse(url2)

    if p1.scheme == '' or p2.scheme == '' or p1.path[0] != '/' or p2.path[0] != '/':
        usage()

    extra_ab_params = ' '.join(sys.argv[1:-2])
    res = versus(url1, url2, extra_ab_params)[0]
    url1 = color("%s (%d reqs/s)" % (url1, res[0]) , 'green' if res[2] > 1 else 'red')
    url2 = color("%s (%d reqs/s)" % (url2, res[1]), 'green' if res[2] < 1 else 'red')
    cmp = color("%.2fx times %s" % (abs(res[2]), 'faster' if res[2] > 1 else 'slower'), 'magenta')
    
    print "%s is %s than %s" % (url1, cmp, url2)
except IndexError, e:
    usage()
